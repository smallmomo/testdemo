spring:
  cloud:
    function:
      definition: myProducer;myConsumer
    stream:
      # We need to define bindings for both producer and consumer
      bindings:
        myProducer-out-0:
          destination: user-actions-topic
          # Tell SCS we are sending JSON data
          content-type: application/json
          producer:
            # Partition based on the 'userId' field in the UserAction payload
            partition-key-expression: payload.userId
            # We will have 2 partitions (one for each user)
            partition-count: 2

        myConsumer-in-0:
          destination: user-actions-topic
          group: user-actions-group
          content-type: application/json
          consumer:
            # Enable partitioned processing on the consumer side
            partitioned: true
            # Ensure serial processing within a single consumer instance
            concurrency: 1

      # Instance properties are needed for partitioning
      # You need to launch each instance with a different instance-index
      instance-count: 2 # Should match partition-count
      instance-index: 1 # Set via command line

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

server:
  port: 8081
